// backend/static/js/accounts.js (最终修正版)
$(document).ready(function() {

    // --- 全局变量和常量 ---
    const API_ACCOUNTS_URL = '/api/accounts';
    const API_BALANCES_URL = '/api/account_balances';
    const $tableBody = $('#accounts-table tbody');
    const $modal = $('#account-modal');
    const $form = $('#account-form');
    const $modalTitle = $('#modal-title');
    const $fiscalYearInput = $('#fiscal-year');
    const $balanceStatus = $('#balance-status');

    // --- 功能1: 加载并显示所有会计科目与期初余额 ---
    function loadAccounts() {
        const year = $fiscalYearInput.val();
        if (!year) {
            // 页面刚加载时，年份输入框可能有默认值但未触发change，这里给个默认值
            const currentYear = new Date().getFullYear();
            $fiscalYearInput.val(currentYear);
            loadAccounts(); // 重新调用
            return;
        }
        
        const accountsRequest = $.ajax({ url: API_ACCOUNTS_URL, type: 'GET' });
        const balancesRequest = $.ajax({ url: `${API_BALANCES_URL}?year=${year}`, type: 'GET' });

        // 当两个请求都成功后，再渲染表格
        $.when(accountsRequest, balancesRequest).done(function(accountsResponse, balancesResponse) {
            const accounts = accountsResponse[0];
            const balancesMap = balancesResponse[0];
            $tableBody.empty();
            if (accounts && Array.isArray(accounts)) {
                accounts.forEach(function(account) {
                    // 从转换后的 balancesMap 中安全地获取余额
                    const openingBalance = balancesMap[account.account_code] || 0.00;

                    const row = `
                        <tr data-code="${account.account_code}">
                            <td>${account.account_code}</td>
                            <td>${account.account_name}</td>
                            <td>${account.balance_direction === 'debit' ? '借' : '贷'}</td>
                            <td>${account.level || ''}</td>
                            <td>
                                <input type.phpe="number" class="opening-balance-input" value="${parseFloat(openingBalance).toFixed(2)}" step="0.01" style="width: 100%;">
                            </td>
                            <td>
                                <button class="btn btn-edit" data-code="${account.account_code}">编辑</button>
                                <button class="btn btn-danger btn-delete" data-code="${account.account_code}">删除</button>
                            </td>
                        </tr>
                    `;
                    $tableBody.append(row);
                });
            }
        }).fail(function(xhr, status, error) {
            console.error("加载失败:", status, error);
            console.error("服务器响应:", xhr.responseText);
            alert("加载会计科目或期初余额失败！请检查浏览器控制台获取详细错误信息。");
        });
    }

    // --- 功能2: 会计年度改变时，重新加载数据 ---
    $fiscalYearInput.on('change', function() {
        $balanceStatus.text('').hide(); // 清空并隐藏状态提示
        loadAccounts();
    });

    // --- 功能3: 保存期初余额 ---
    $('#btn-save-balances').on('click', function() {
        const year = $fiscalYearInput.val();
        if (!year) {
            alert('请输入有效的会计年度！');
            return;
        }

        let balancesToSave = [];
        $tableBody.find('tr').each(function() {
            const $row = $(this);
            const accountCode = $row.data('code');
            const balance = $row.find('.opening-balance-input').val();
            
            balancesToSave.push({
                account_code: accountCode,
                balance: parseFloat(balance) || 0
            });
        });

        $.ajax({
            url: API_BALANCES_URL,
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                year: parseInt(year),
                balances: balancesToSave
            }),
            success: function(response) {
                $balanceStatus.text(response.message).fadeIn().delay(3000).fadeOut();
            },
            error: function(xhr) {
                alert('保存失败: ' + (xhr.responseJSON ? xhr.responseJSON.error : '未知错误'));
            }
        });
    });

    // --- 功能4: 科目CRUD (Create, Read, Update, Delete) ---

    // 打开新增弹窗
    $('#btn-add-account').on('click', function() {
        $modalTitle.text('新增科目');
        $form[0].reset();
        $('#account-code').prop('readonly', false);
        $modal.show();
    });

    // 关闭弹窗
    $('.close-button').on('click', function() {
        $modal.hide();
    });

    // 提交表单 (处理新增和更新)
    $form.on('submit', function(event) {
        event.preventDefault();
        
        const accountCode = $('#account-code').val();
        const isUpdate = $('#account-code').prop('readonly');

        const url = isUpdate ? `${API_ACCOUNTS_URL}/${accountCode}` : API_ACCOUNTS_URL;
        const method = isUpdate ? 'PUT' : 'POST';

        const formData = {
            account_name: $('#account-name').val(),
            balance_direction: $('#balance-direction').val()
        };
        if (!isUpdate) {
            formData.account_code = accountCode;
        }

        $.ajax({
            url: url,
            type: method,
            contentType: 'application/json',
            data: JSON.stringify(formData),
            success: function(response) {
                alert(response.message);
                $modal.hide();
                loadAccounts(); // 操作成功后刷新整个列表
            },
            error: function(xhr) {
                alert('操作失败！' + (xhr.responseJSON ? xhr.responseJSON.error : ''));
            }
        });
    });

    // 使用事件委托来处理动态生成的“编辑”和“删除”按钮
    $tableBody.on('click', '.btn-edit', function() {
        const accountCode = $(this).data('code');
        
        $.ajax({
            url: `${API_ACCOUNTS_URL}/${accountCode}`,
            type: 'GET',
            success: function(account) {
                $modalTitle.text('编辑科目');
                $('#account-code').val(account.account_code).prop('readonly', true);
                $('#account-name').val(account.account_name);
                $('#balance-direction').val(account.balance_direction);
                $modal.show();
            },
            error: function(xhr) {
                alert('获取科目信息失败: ' + (xhr.responseJSON ? xhr.responseJSON.error : '未知错误'));
            }
        });
    });

    $tableBody.on('click', '.btn-delete', function() {
        if (confirm('确定要删除这个科目吗？')) {
            const accountCode = $(this).data('code');
            $.ajax({
                url: `${API_ACCOUNTS_URL}/${accountCode}`,
                type: 'DELETE',
                success: function(response) {
                    alert(response.message);
                    loadAccounts(); // 操作成功后刷新整个列表
                },
                error: function(xhr) {
                    alert('删除失败: ' + (xhr.responseJSON ? xhr.responseJSON.error : '未知错误'));
                }
            });
        }
    });

    // --- 页面初始加载 ---
    loadAccounts();
});
